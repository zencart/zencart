<?php
/**
 * @copyright Copyright 2003-2020 Zen Cart Development Team
 * @license http://www.zen-cart.com/license/2_0.txt GNU Public License V2.0
 */

namespace Tests\Features\FeatureStore;

use Tests\Support\zcFeatureTestCaseStore;

class StorePaymentModulesMoneyOrderTest extends zcFeatureTestCaseStore
{
    public static function setUpBeforeClass(): void
    {
        global $psr4Autoloader;
        parent::setUpBeforeClass();
        require_once DIR_FS_CATALOG . DIR_WS_CLASSES . 'vendors/AuraAutoload/src/Loader.php';
        require_once DIR_FS_CATALOG . 'laravel/vendor/autoload.php';
        $psr4Autoloader = new \Aura\Autoload\Loader;
        $psr4Autoloader->register();
        require('includes/psr4Autoload.php');
    }

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->removeAllPaymentModules();
        $this->installPaymentModule('MONEYORDER', 'moneyorder');
    }

    /**
     * @test
     */

    public function I_can_checkout_with_a_MONEYORDER()
    {
        $this->createCustomerAccountOrLogin('florida-basic1');
        $this->browser->request('GET', HTTP_SERVER . '/index.php?main_page=product_info&products_id=25');
        $response = $this->browser->getResponse();
        $this->assertStringContainsString('Microsoft', (string)$response->getContent());
        $this->browser->submitForm('Add to Cart', [
            'cart_quantity' => '1',
            'products_id' => '25',
        ]);

        $response = $this->browser->getResponse();
        $this->assertStringContainsString('Your Shopping Cart Contents', (string)$response->getContent());
        $this->browser->request('GET', HTTP_SERVER . '/index.php?main_page=checkout_shipping');
        $response = $this->browser->getResponse();
        $this->assertStringContainsString('Delivery Information', (string)$response->getContent());
        $this->browser->submitForm('Continue', [
        ]);

        $response = $this->browser->getResponse();
        $this->assertStringContainsString('Payment Information', (string)$response->getContent());
        $this->assertStringContainsString('Money Order', (string)$response->getContent());
        $this->browser->submitForm('Continue', [
        ]);
        $this->assertStringContainsString('69.99', (string)$response->getContent());
        $this->assertStringContainsString('2.50', (string)$response->getContent());
        $this->assertStringContainsString('4.90', (string)$response->getContent());
        $this->assertStringContainsString('77.39', (string)$response->getContent());
        $response = $this->browser->getResponse();
        $this->assertStringContainsString('Order Confirmation', (string)$response->getContent());
        $this->assertStringContainsString('69.99', (string)$response->getContent());
        $this->assertStringContainsString('2.50', (string)$response->getContent());
        $this->assertStringContainsString('4.90', (string)$response->getContent());
        $this->assertStringContainsString('77.39', (string)$response->getContent());
        $this->browser->submitForm('btn_submit_x', [
        ]);
        $response = $this->browser->getResponse();
        $this->assertStringContainsString('Your Order Number is:', (string)$response->getContent());

    }

    /**
     * @test
     */
    public function I_cannot_checkout_with_a_MONEYORDER_with_invalid_zone()
    {
        $this->setConfiguration('MODULE_PAYMENT_MONEYORDER_ZONE', '9999');
        $this->createCustomerAccountOrLogin('florida-basic1');
        $this->browser->request('GET', HTTP_SERVER . '/index.php?main_page=product_info&products_id=25');
        $response = $this->browser->getResponse();
        $this->assertStringContainsString('Microsoft', (string)$response->getContent());
        $this->browser->submitForm('Add to Cart', [
            'cart_quantity' => '1',
            'products_id' => '25',
        ]);
        $response = $this->browser->getResponse();
        $this->assertStringContainsString('Your Shopping Cart Contents', (string)$response->getContent());
        $this->browser->request('GET', HTTP_SERVER . '/index.php?main_page=checkout_shipping');
        $response = $this->browser->getResponse();
        $this->assertStringContainsString('Delivery Information', (string)$response->getContent());
        $this->browser->submitForm('Continue', [
        ]);
        $response = $this->browser->getResponse();
        $this->assertStringContainsString('Payment Information', (string)$response->getContent());
        $this->assertStringContainsString('Sorry, we are not accepting payments from your region at this time.', (string)$response->getContent());
    }
}
